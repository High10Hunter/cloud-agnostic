apiVersion: cluster.x-k8s.io/v1beta2
kind: ClusterClass
metadata:
  name: aws-quick-start
  namespace: default
spec:
  infrastructure:
    templateRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      kind: AWSClusterTemplate
      name: quick-start
  controlPlane:
    templateRef:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta2
      kind: KubeadmControlPlaneTemplate
      name: quick-start-control-plane
    machineInfrastructure:
      templateRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: AWSMachineTemplate
        name: quick-start-control-plane
    healthCheck:
      checks:
        unhealthyNodeConditions:
          - type: Ready
            status: "False"
            timeoutSeconds: 300
          - type: Ready
            status: Unknown
            timeoutSeconds: 300
  workers:
    machineDeployments:
      - class: default-worker
        infrastructure:
          templateRef:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            name: quick-start-worker-machinetemplate
        bootstrap:
          templateRef:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta2
            kind: KubeadmConfigTemplate
            name: quick-start-worker-bootstraptemplate
        healthCheck:
          checks:
            unhealthyNodeConditions:
              - type: Ready
                status: "False"
                timeoutSeconds: 300
              - type: Ready
                status: Unknown
                timeoutSeconds: 300
  variables:
    - name: region
      required: true
      schema:
        openAPIV3Schema: { type: string, default: us-east-1 }
    - name: vpc
      required: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            cidrBlock:
              type: string
              default: "192.168.0.0/16"
            availabilityZoneUsageLimit:
              type: integer
              default: 1
    - name: subnets
      required: true
      schema:
        openAPIV3Schema:
          type: array
          items:
            type: object
            required:
              - id
              - cidrBlock
              - availabilityZone
              - isPublic
            properties:
              id:
                type: string
              cidrBlock:
                type: string
              availabilityZone:
                type: string
              isPublic:
                type: boolean
    - name: controlPlaneLoadBalancer
      required: false
      schema:
        openAPIV3Schema:
          type: object
          properties:
            loadBalancerType:
              type: string
              enum: ["alb", "nlb", "elb", "classic", "disabled"]
              default: "nlb"
            scheme:
              type: string
              enum: ["internet-facing", "internal"]
              default: "internet-facing"
            healthCheckProtocol:
              type: string
              enum: ["TCP", "UDP", "HTTP", "HTTPS", "TLS"]
              default: "TCP"
    - name: sshKeyName
      required: true
      schema:
        openAPIV3Schema: { type: string, default: default }
    - name: controlPlaneMachineType
      required: true
      schema:
        openAPIV3Schema: { type: string, default: t3.large }
    - name: rootVolume
      required: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            size:
              type: integer
              minimum: 8 # GiB
              default: 30 # GiB
            type:
              type: string
              enum: ["gp3", "gp2", "io1", "io2", "standard"]
              default: "gp3"
          required: ["size", "type"]
    - name: workerMachineType
      required: true
      schema:
        openAPIV3Schema: { type: string, default: t3.large }
    - name: amiID
      required: true
      schema:
        openAPIV3Schema: { type: string }
  patches:
    - name: region
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSClusterTemplate
            matchResources: { infrastructureCluster: true }
          jsonPatches:
            - op: add
              path: /spec/template/spec/region
              valueFrom: { variable: region }
    - name: network
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
            - op: add
              path: /spec/template/spec/network/vpc
              valueFrom:
                variable: vpc
            - op: add
              path: /spec/template/spec/network/subnets
              valueFrom:
                variable: subnets
    - name: controlPlaneLoadBalancer
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
            - op: add
              path: /spec/template/spec/controlPlaneLoadBalancer
              valueFrom:
                variable: controlPlaneLoadBalancer
    - name: sshKeyName
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSClusterTemplate
            matchResources: { infrastructureCluster: true }
          jsonPatches:
            - op: add
              path: /spec/template/spec/sshKeyName
              valueFrom: { variable: sshKeyName }
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            matchResources: { controlPlane: true }
          jsonPatches:
            - op: add
              path: /spec/template/spec/sshKeyName
              valueFrom: { variable: sshKeyName }
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            matchResources:
              machineDeploymentClass: { names: ["default-worker"] }
          jsonPatches:
            - op: add
              path: /spec/template/spec/sshKeyName
              valueFrom: { variable: sshKeyName }
    - name: controlPlaneMachineType
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            matchResources: { controlPlane: true }
          jsonPatches:
            - op: replace
              path: /spec/template/spec/instanceType
              valueFrom: { variable: controlPlaneMachineType }
    - name: rootVolume
      definitions:
        # Control plane machines
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            matchResources: { controlPlane: true }
          jsonPatches:
            - op: add
              path: /spec/template/spec/rootVolume
              value: {}
            - op: add
              path: /spec/template/spec/rootVolume/size
              valueFrom:
                variable: rootVolume.size
            - op: add
              path: /spec/template/spec/rootVolume/type
              valueFrom:
                variable: rootVolume.type
        # Worker MachineDeployment class(es)
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            matchResources:
              machineDeploymentClass: { names: ["default-worker"] }
          jsonPatches:
            - op: add
              path: /spec/template/spec/rootVolume
              value: {}
            - op: add
              path: /spec/template/spec/rootVolume/size
              valueFrom:
                variable: rootVolume.size
            - op: add
              path: /spec/template/spec/rootVolume/type
              valueFrom:
                variable: rootVolume.type
    - name: workerMachineType
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            matchResources:
              machineDeploymentClass: { names: ["default-worker"] }
          jsonPatches:
            - op: replace
              path: /spec/template/spec/instanceType
              valueFrom: { variable: workerMachineType }
    - name: amiID
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            matchResources: { controlPlane: true }
          jsonPatches:
            - op: add
              path: /spec/template/spec/ami
              value: {}
            - op: add
              path: /spec/template/spec/ami/id
              valueFrom:
                variable: amiID
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            matchResources:
              machineDeploymentClass: { names: ["default-worker"] }
          jsonPatches:
            - op: add
              path: /spec/template/spec/ami
              value: {}
            - op: add
              path: /spec/template/spec/ami/id
              valueFrom:
                variable: amiID
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSClusterTemplate
metadata:
  name: quick-start
  namespace: default
spec:
  template:
    spec: {}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta2
kind: KubeadmControlPlaneTemplate
metadata:
  name: quick-start-control-plane
  namespace: default
spec:
  template:
    spec:
      # version taken from Cluster.spec.topology.version
      kubeadmConfigSpec:
        # external CCM
        clusterConfiguration:
          apiServer:
            extraArgs:
              - name: cloud-provider
                value: external
          controllerManager:
            extraArgs:
              - name: cloud-provider
                value: external
        initConfiguration:
          nodeRegistration:
            name: "{{ ds.meta_data.local_hostname }}"
            kubeletExtraArgs:
              - name: cloud-provider
                value: external
        joinConfiguration:
          nodeRegistration:
            name: "{{ ds.meta_data.local_hostname }}"
            kubeletExtraArgs:
              - name: cloud-provider
                value: external
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: quick-start-control-plane
  namespace: default
spec:
  template:
    spec:
      instanceType: REPLACEME # replaced by patch
      iamInstanceProfile: control-plane.cluster-api-provider-aws.sigs.k8s.io
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: quick-start-worker-machinetemplate
  namespace: default
spec:
  template:
    spec:
      instanceType: REPLACEME # replaced by patch
      iamInstanceProfile: nodes.cluster-api-provider-aws.sigs.k8s.io
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta2
kind: KubeadmConfigTemplate
metadata:
  name: quick-start-worker-bootstraptemplate
  namespace: default
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: "{{ ds.meta_data.local_hostname }}"
          kubeletExtraArgs:
            - name: cloud-provider
              value: external
